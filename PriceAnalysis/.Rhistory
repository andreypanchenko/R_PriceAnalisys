prices <- merge(prices, d4, by = 'M_id', all = TRUE)
colnames(prices)[3] <- "DISTR.1"
colnames(prices)[5] <- "DISTR.2.1"
colnames(prices)[7] <- "DISTR.2.2"
colnames(prices)[9] <- "DISTR.3"
colnames(prices)[11] <- "DISTR.4"
for(i in 2:6){
prices[i] <-NULL
}
# Transform chars in price column into numbers (replace ',' on '.')
prices$DISTR.1 <- as.numeric(gsub(",", ".", prices$DISTR.1))
prices$DISTR.2.1 <- as.numeric(gsub(",", ".", prices$DISTR.2.1))
prices$DISTR.2.2 <- as.numeric(gsub(",", ".", prices$DISTR.2.2))
prices$DISTR.3 <- as.numeric(gsub(",", ".", prices$DISTR.3))
prices$DISTR.4 <- as.numeric(gsub(",", ".", prices$DISTR.4))
# Merge two price list in DISTR.2 in one (common) price list
prices$DISTR.2 <- replaceNA(prices$DISTR.2.1) + replaceNA(prices$DISTR.2.2)
prices$DISTR.2.1 <- NULL
prices$DISTR.2.2 <- NULL
prices$DISTR.2 <- replaceZero(prices$DISTR.2)
# Add avg in prices
prices$AVG_PRICE <- avgPrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add single price flag
prices$SinglePriceFlag <- singlePrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add sales in price table
prices <- merge(x = prices, y = sales, by.x = 'M_ID', by.y = 'ID_MORION', all.x = TRUE)
# Delete 'NaN' from AVG_PRICE
prices <-
prices%>%
filter(AVG_PRICE!='NaN')
# Add quantile
prices$QUANTILE_AVG <- addQuantileColumn(prices$AVG_PRICE, 0.1)
# Add price groups
prices$PriceGroup <- addPriceGroups(prices$AVG_PRICE)
# Add a market share flag
prices$MarketShareUAH <- addMarketShare(prices$UAH)
prices$MarketShareUnit <- addMarketShare(prices$Unit)
# Delete excess objects
rm(sales, avgPrice, replaceZero, replaceNA, singlePrice, addQuantileColumn, addMarketShare)
# Add price groups
source("functions.R")
# Load prices data & market sales
sales <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/sales_market.csv")
d1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d1.csv")
d2.1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.1.csv")
d2.2 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.2.csv")
d3 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d3.csv")
d4 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d4.csv")
prices <- merge(d1, d2.1, by = 'M_id', all = TRUE)
prices <- merge(prices, d2.2, by = 'M_id', all = TRUE)
prices <- merge(prices, d3, by = 'M_id', all = TRUE)
prices <- merge(prices, d4, by = 'M_id', all = TRUE)
colnames(prices)[3] <- "DISTR.1"
colnames(prices)[5] <- "DISTR.2.1"
colnames(prices)[7] <- "DISTR.2.2"
colnames(prices)[9] <- "DISTR.3"
colnames(prices)[11] <- "DISTR.4"
for(i in 2:6){
prices[i] <-NULL
}
# Transform chars in price column into numbers (replace ',' on '.')
prices$DISTR.1 <- as.numeric(gsub(",", ".", prices$DISTR.1))
prices$DISTR.2.1 <- as.numeric(gsub(",", ".", prices$DISTR.2.1))
prices$DISTR.2.2 <- as.numeric(gsub(",", ".", prices$DISTR.2.2))
prices$DISTR.3 <- as.numeric(gsub(",", ".", prices$DISTR.3))
prices$DISTR.4 <- as.numeric(gsub(",", ".", prices$DISTR.4))
# Merge two price list in DISTR.2 in one (common) price list
prices$DISTR.2 <- replaceNA(prices$DISTR.2.1) + replaceNA(prices$DISTR.2.2)
prices$DISTR.2.1 <- NULL
prices$DISTR.2.2 <- NULL
prices$DISTR.2 <- replaceZero(prices$DISTR.2)
# Add avg in prices
prices$AVG_PRICE <- avgPrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add single price flag
prices$SinglePriceFlag <- singlePrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add sales in price table
prices <- merge(x = prices, y = sales, by.x = 'M_ID', by.y = 'ID_MORION', all.x = TRUE)
# Delete 'NaN' from AVG_PRICE
prices <-
prices%>%
filter(AVG_PRICE!='NaN')
# Add quantile
prices$QUANTILE_AVG <- addQuantileColumn(prices$AVG_PRICE, 0.1)
# Add price groups
prices$PriceGroup <- addPriceGroups(prices$AVG_PRICE)
# Add a market share flag
prices$MarketShareUAH <- addMarketShare(prices$UAH)
prices$MarketShareUnit <- addMarketShare(prices$Unit)
# Delete excess objects
rm(sales, avgPrice, replaceZero, replaceNA, singlePrice, addQuantileColumn, addMarketShare)
View(prices)
rm(d1, d2.1, d2.2, d3, d4)
rm(i, d1, d2.1, d2.2, d3, d4)
rm(sales, avgPrice, replaceZero, replaceNA, singlePrice, addQuantileColumn, addMarketShare, addPriceGroups())
rm(i, d1, d2.1, d2.2, d3, d4)
rm(sales, avgPrice, replaceZero, replaceNA, singlePrice, addQuantileColumn, addMarketShare, addPriceGroups)
sales <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/sales_market.csv")
d1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d1.csv")
d2.1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.1.csv")
d2.2 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.2.csv")
d3 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d3.csv")
d4 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d4.csv")
prices <- merge(d1, d2.1, by = 'M_id', all = TRUE)
prices <- merge(prices, d2.2, by = 'M_id', all = TRUE)
prices <- merge(prices, d3, by = 'M_id', all = TRUE)
prices <- merge(prices, d4, by = 'M_id', all = TRUE)
colnames(prices)[3] <- "DISTR.1"
colnames(prices)[5] <- "DISTR.2.1"
colnames(prices)[7] <- "DISTR.2.2"
colnames(prices)[9] <- "DISTR.3"
colnames(prices)[11] <- "DISTR.4"
for(i in 2:6){
prices[i] <-NULL
}
source("functions.R")
source("functions.R")
# Load prices data & market sales
sales <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/sales_market.csv")
d1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d1.csv")
d2.1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.1.csv")
d2.2 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.2.csv")
d3 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d3.csv")
d4 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d4.csv")
prices <- merge(d1, d2.1, by = 'M_id', all = TRUE)
prices <- merge(prices, d2.2, by = 'M_id', all = TRUE)
prices <- merge(prices, d3, by = 'M_id', all = TRUE)
prices <- merge(prices, d4, by = 'M_id', all = TRUE)
source("functions.R")
# Load prices data & market sales
sales <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/sales_market.csv")
d1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d1.csv")
d2.1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.1.csv")
d2.2 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.2.csv")
d3 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d3.csv")
d4 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d4.csv")
prices <- merge(d1, d2.1, by = 'M_id', all = TRUE)
prices <- merge(prices, d2.2, by = 'M_id', all = TRUE)
prices <- merge(prices, d3, by = 'M_id', all = TRUE)
prices <- merge(prices, d4, by = 'M_id', all = TRUE)
rm(d1, d2.1, d2.2, d3, d4)
colnames(prices)[3] <- "DISTR.1"
colnames(prices)[5] <- "DISTR.2.1"
colnames(prices)[7] <- "DISTR.2.2"
colnames(prices)[9] <- "DISTR.3"
colnames(prices)[11] <- "DISTR.4"
for(i in 2:6){
prices[i] <-NULL
}
rm(i)
# Transform chars in price column into numbers (replace ',' on '.')
prices$DISTR.1 <- as.numeric(gsub(",", ".", prices$DISTR.1))
prices$DISTR.2.1 <- as.numeric(gsub(",", ".", prices$DISTR.2.1))
prices$DISTR.2.2 <- as.numeric(gsub(",", ".", prices$DISTR.2.2))
prices$DISTR.3 <- as.numeric(gsub(",", ".", prices$DISTR.3))
prices$DISTR.4 <- as.numeric(gsub(",", ".", prices$DISTR.4))
# Merge two price list in DISTR.2 in one (common) price list
prices$DISTR.2 <- replaceNA(prices$DISTR.2.1) + replaceNA(prices$DISTR.2.2)
prices$DISTR.2.1 <- NULL
prices$DISTR.2.2 <- NULL
prices$DISTR.2 <- replaceZero(prices$DISTR.2)
# Add avg in prices
prices$AVG_PRICE <- avgPrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add single price flag
prices$SinglePriceFlag <- singlePrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add sales in price table
prices <- merge(x = prices, y = sales, by.x = 'M_ID', by.y = 'ID_MORION', all.x = TRUE)
# Delete 'NaN' from AVG_PRICE
prices <-
prices%>%
filter(AVG_PRICE!='NaN')
# Add quantile
prices$QUANTILE_AVG <- addQuantileColumn(prices$AVG_PRICE, 0.1)
# Add price groups
prices$PriceGroup <- addPriceGroups(prices$AVG_PRICE)
# Add a market share flag
prices$MarketShareUAH <- addMarketShare(prices$UAH)
prices$MarketShareUnit <- addMarketShare(prices$Unit)
# Delete excess objects
View(prices)
# Add a market share flag
prices$MarketShareUAH <- addMarketShare(prices$UAH)
source("functions.R")
# Load prices data & market sales
sales <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/sales_market.csv")
d1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d1.csv")
d2.1 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.1.csv")
d2.2 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d2.2.csv")
d3 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d3.csv")
d4 <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/d4.csv")
prices <- merge(d1, d2.1, by = 'M_id', all = TRUE)
prices <- merge(prices, d2.2, by = 'M_id', all = TRUE)
prices <- merge(prices, d3, by = 'M_id', all = TRUE)
prices <- merge(prices, d4, by = 'M_id', all = TRUE)
rm(d1, d2.1, d2.2, d3, d4)
colnames(prices)[3] <- "DISTR.1"
colnames(prices)[5] <- "DISTR.2.1"
colnames(prices)[7] <- "DISTR.2.2"
colnames(prices)[9] <- "DISTR.3"
colnames(prices)[11] <- "DISTR.4"
for(i in 2:6){
prices[i] <-NULL
}
rm(i)
# Transform chars in price column into numbers (replace ',' on '.')
prices$DISTR.1 <- as.numeric(gsub(",", ".", prices$DISTR.1))
prices$DISTR.2.1 <- as.numeric(gsub(",", ".", prices$DISTR.2.1))
prices$DISTR.2.2 <- as.numeric(gsub(",", ".", prices$DISTR.2.2))
prices$DISTR.3 <- as.numeric(gsub(",", ".", prices$DISTR.3))
prices$DISTR.4 <- as.numeric(gsub(",", ".", prices$DISTR.4))
# Merge two price list in DISTR.2 in one (common) price list
prices$DISTR.2 <- replaceNA(prices$DISTR.2.1) + replaceNA(prices$DISTR.2.2)
prices$DISTR.2.1 <- NULL
prices$DISTR.2.2 <- NULL
prices$DISTR.2 <- replaceZero(prices$DISTR.2)
# Add avg in prices
prices$AVG_PRICE <- avgPrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add single price flag
prices$SinglePriceFlag <- singlePrice(prices$DISTR.1, prices$DISTR.2, prices$DISTR.3, prices$DISTR.4)
# Add sales in price table
prices <- merge(x = prices, y = sales, by.x = 'M_ID', by.y = 'ID_MORION', all.x = TRUE)
# Delete 'NaN' from AVG_PRICE
prices <-
prices%>%
filter(AVG_PRICE!='NaN')
# Add quantile
prices$QUANTILE_AVG <- addQuantileColumn(prices$AVG_PRICE, 0.2)
# Add price groups
prices$PriceGroup <- addPriceGroups(prices$AVG_PRICE)
# Add a market share to sales
# Delete excess objects
rm(sales, avgPrice, replaceZero, replaceNA, singlePrice, addQuantileColumn, addMarketShare, addPriceGroups)
sales <- read.csv2("~/R/PriceAnalysis_ADD/data_prices/sales_market.csv")
View(sales)
sales <- sales[order(sales$UAH),]
sales <- sales[order(sales$UAH, decreasing = TRUE),]
sales$UAH / sum(sales$UAH)
s <- sales$UAH / sum(sales$UAH)
sum(s)
s <- sales$UAH / sum(sales$UAH) * 100
sum(s)
sum(1:50)
sum(1:2)
sum(1:3)
sum(s[1:3])
sum(s[1:length(s)])
sales$MarketShareUAH <- sales$UAH / sum(sales$UAH) * 100
View(prices)
sales$SumRangeShare <- sum(sales$MarketShareUAH[1:length(sales$MarketShareUAH)])
s <- sum(sales$MarketShareUAH[1:length(sales$MarketShareUAH)])
library(dplyr)
library(ggplot2)
library(reshape)
# Load functions
source("add_prices.R")
getwd()
d1 <- read.csv2("~/R/PriceAnalysis/data_prices/d1.csv", header=FALSE, comment.char="#")
View(d1)
getwd()
sales <- read.csv2("/home/antonaks/R/PriceAnalysis/data_prices/sales_market.csv")
View(sales)
getwd()
sales <- read.csv2(getwd() + "/data_prices/sales_market.csv")
sales <- read.csv2( paste(getwd(), "/data_prices/sales_market.csv"))
sales <- read.csv2("~/R/PriceAnalysis/data_prices/sales_market.csv")
d1 <- read.csv2("~/R/PriceAnalysis/data_prices/d1.csv")
d2.1 <- read.csv2("~/R/PriceAnalysis/data_prices/d2.1.csv")
d2.2 <- read.csv2("~/R/PriceAnalysis/data_prices/d2.2.csv")
d3 <- read.csv2("~/R/PriceAnalysis/data_prices/d3.csv")
d4 <- read.csv2("~/R/PriceAnalysis/data_prices/d4.csv")
sales <- read.csv2("~/R/PriceAnalysis/data_prices/sales_market.csv")
sales <- sales[order(sales$UAH, decreasing = TRUE),]
sales$MarketShareUAH <- sales$UAH / sum(sales$UAH) * 100
s <- cumsum(sales$MarketShareUAH)
s
tail(s)
head(s)
tail(s)
sales <- sales[order(sales$UAH, decreasing = TRUE),]
sales$MarketShareUAH <- sales$UAH / sum(sales$UAH) * 100
View(sales)
sales <- read.csv2("~/R/PriceAnalysis/data_prices/sales_market.csv")
View(sales)
sales <- read.csv2("~/R/PriceAnalysis/data_prices/sales_market.csv")
sales <- sales[order(sales$UAH, decreasing = TRUE),]
sales <- sales[order(sales$Money, decreasing = TRUE),]
sales$MarketShareMoney <- sales$UAH / sum(sales$UAH) * 100
sales <- sales[order(sales$Money, decreasing = TRUE),]
sales$MarketShareMoney <- sales$Money / sum(sales$Money) * 100
sales <- read.csv2("~/R/PriceAnalysis/data_prices/sales_market.csv")
sales <- sales[order(sales$Money, decreasing = TRUE),]
sales$MarketShareMoney% <- sales$Money / sum(sales$Money) * 100
sales$MarketShareMoney <- sales$Money / sum(sales$Money) * 100
View(sales)
sales$CumMarketShareMoney <- cumsum(sales$MarketShareMoney)
View(sales)
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
ifelse(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B"}
else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
if(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B"}
else{temp[i] = "C"}
}
sales$MoneyCategory <- temp
sales$CumMarketShareMoney
sales$CumMarketShareMoney[45]
sales$CumMarketShareMoney[45]<=90
temp[1] = "A"
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
#  if(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B"}
#  else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
ifelse(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B"}
#  else{temp[i] = "C"}
}
if(sales$CumMarketShareMoney[45] <= 80){temp[i] = "A"}
if(sales$CumMarketShareMoney[45] <= 95){temp[i] = "B"}
if(sales$CumMarketShareMoney[45] <= 80){temp[45] = "A"}
if(sales$CumMarketShareMoney[45] <= 95){temp[45] = "B"}
temp[45]
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A" next }
if(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B" next }
else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A" next }
if(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B" next }
else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A" next }
if(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B" next }
#else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"
next}
if(sales$CumMarketShareMoney[i] <= 95){temp[i] = "B"
next}
else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"
next}
else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
else{temp[i] = "C"}
}
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = 1}
else{temp[i] = "C"}
}
for(i in 1:20){
temp2 <- vrctor()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
}
for(i in 1:20){
temp2 <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
}
for(i in 1:20){
temp2 <- vector()
if(sales$CumMarketShareMoney[i] <= 80){tem2[i] = "A"}
}
length(sales$CumMarketShareMoney)
for(i in 1:length(sales$CumMarketShareMoney)){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80){temp[i] = "A"}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i]<=80){temp[i] = "A"}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i]<=80) {temp[i] = "A"}
}
View(sales)
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = 1}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = 1}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = 1}
}
sales$CumMarketShareMoney[1]
if(sales$CumMarketShareMoney[1] <= 80) {temp[1] = "A"}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[1] <= 80) {temp[1] = "A"}
}
for(i in 1:20){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"}
}
for(i in 1:2){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"}
}
for(i in 1:3){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"}
}
for(i in 1:3){
temp <- vector()
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "B"}
}
temp <- vector()
for(i in 1:3){
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"}
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "B"}
else {temp[i] = "C"}
}
temp <- vector()
for(i in 1:3){
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"
next}
if(sales$CumMarketShareMoney[i] <= 95) {temp[i] = "B"
next}
else {temp[i] = "C"}
}
len <- length(ales$CumMarketShareMoney)
temp <- vector()
for(i in 1:len){
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"
next}
if(sales$CumMarketShareMoney[i] <= 95) {temp[i] = "B"
next}
else {temp[i] = "C"}
}
len <- length(ales$CumMarketShareMoney)
len <- length(sales$CumMarketShareMoney)
temp <- vector()
for(i in 1:len){
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"
next}
if(sales$CumMarketShareMoney[i] <= 95) {temp[i] = "B"
next}
else {temp[i] = "C"}
}
sales$MoneyCategory <- temp
sales <- sales[order(sales$Quantity, decreasing = TRUE),]
sales$MarketShareQuantity <- sales$Quantity / sum(sales$Quantity) * 100
sales$CumMarketShareQuantity <- cumsum(sales$MarketShareQuantity)
len <- length(sales$CumMarketShareQuantity)
temp <- vector()
for(i in 1:len){
if(sales$CumMarketShareQuantity[i] <= 70) {temp[i] = "A"
next}
if(sales$CumMarketShareQuantity[i] <= 90) {temp[i] = "B"
next}
else {temp[i] = "C"}
}
sales$MoneyCategory <- temp
sales <- sales[order(sales$Money, decreasing = TRUE),]
sales$MarketShareMoney <- sales$Money / sum(sales$Money) * 100
sales$CumMarketShareMoney <- cumsum(sales$MarketShareMoney)
len <- length(sales$CumMarketShareMoney)
temp <- vector()
for(i in 1:len){
if(sales$CumMarketShareMoney[i] <= 80) {temp[i] = "A"
next}
if(sales$CumMarketShareMoney[i] <= 95) {temp[i] = "B"
next}
else {temp[i] = "C"}
}
sales$MoneyCategory <- temp
sales <- sales[order(sales$Quantity, decreasing = TRUE),]
sales$MarketShareQuantity <- sales$Quantity / sum(sales$Quantity) * 100
sales$CumMarketShareQuantity <- cumsum(sales$MarketShareQuantity)
len <- length(sales$CumMarketShareQuantity)
temp <- vector()
for(i in 1:len){
if(sales$CumMarketShareQuantity[i] <= 70) {temp[i] = "A"
next}
if(sales$CumMarketShareQuantity[i] <= 90) {temp[i] = "B"
next}
else {temp[i] = "C"}
}
sales$QuantityCategory <- temp
